{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAM,EAAG,EAAM,gBAAgB,CAAC,OAChC,EAAU,EAAG,SAAS,gBAAgB,CAAC,YACvC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAE5C,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,EAAG,gBAAgB,CAAC,QAAS,SAAC,CAA9B,EAGE,OAFoB,EAAE,MAAM,CAAC,SAAS,EAGpC,IAAK,oBACC,EAAM,QAAQ,CAAC,MAAM,EAAI,GAC3B,EAAE,MAAM,CAAC,YAAY,CAAC,WAAY,CAAA,GAGhC,GACF,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAIA,IAAM,EAAY,EAAM,UAAU,CAAC,SAAS,CAAC,CAAA,GAE7C,EAAM,MAAM,CAAC,GACb,KAGF,KAAK,uBACC,CAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,GACxB,EAAa,YAAY,CAAC,WAAY,CAAA,GAGpC,GACF,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAMA,AAFmB,EAAG,SAAS,gBAAgB,CAAC,OAEtC,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAQ,MAAM,CAAC,EACjB,GAEA,KAGF,KAAK,oBACC,EAAM,QAAQ,CAAC,MAAM,EAAI,GAC3B,EAAU,YAAY,CAAC,WAAY,CAAA,GAGjC,GACF,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAIA,EAAM,gBAAgB,CAAC,MAAM,GAE7B,KAGF,KAAK,uBACC,CAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,GACxB,EAAa,YAAY,CAAC,WAAY,CAAA,GAGpC,GACF,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAMA,AAFmB,EAAG,SAAS,gBAAgB,CAAC,OAEtC,OAAO,CAAC,SAAC,CAAnB,EACE,EAAQ,gBAAgB,CAAC,MAAM,EACjC,EAGJ,CACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tBody = document.querySelector(\"tbody\");\nvar tr = _to_consumable_array(tBody.querySelectorAll(\"tr\"));\nvar button = _to_consumable_array(document.querySelectorAll(\".button\"));\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar appendColumn = document.querySelector(\".append-column\");\nbutton.forEach(function(el) {\n    el.addEventListener(\"click\", function(e) {\n        var clickedButt = e.target.className;\n        switch(clickedButt){\n            case \"append-row button\":\n                {\n                    if (tBody.children.length >= 9) e.target.setAttribute(\"disabled\", true);\n                    if (removeRow) removeRow.disabled = false;\n                    var clonedRow = tBody.firstChild.cloneNode(true);\n                    tBody.append(clonedRow);\n                    break;\n                }\n            case \"append-column button\":\n                {\n                    if (tr[0].cells.length >= 9) appendColumn.setAttribute(\"disabled\", true);\n                    if (removeColumn) removeColumn.disabled = false;\n                    var trUpdated = _to_consumable_array(document.querySelectorAll(\"tr\"));\n                    trUpdated.forEach(function(element) {\n                        var td = document.createElement(\"td\");\n                        element.append(td);\n                    });\n                    break;\n                }\n            case \"remove-row button\":\n                if (tBody.children.length <= 3) removeRow.setAttribute(\"disabled\", true);\n                if (appendRow) appendRow.disabled = false;\n                tBody.lastElementChild.remove();\n                break;\n            case \"remove-column button\":\n                {\n                    if (tr[0].cells.length <= 3) removeColumn.setAttribute(\"disabled\", true);\n                    if (appendColumn) appendColumn.disabled = false;\n                    var trUpdated1 = _to_consumable_array(document.querySelectorAll(\"tr\"));\n                    trUpdated1.forEach(function(element) {\n                        element.lastElementChild.remove();\n                    });\n                    break;\n                }\n        }\n    });\n});\n\n//# sourceMappingURL=index.c5755fa5.js.map\n","'use strict';\n\nconst tBody = document.querySelector('tbody');\nconst tr = [...tBody.querySelectorAll('tr')];\nconst button = [...document.querySelectorAll('.button')];\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst removeColumn = document.querySelector('.remove-column');\nconst appendColumn = document.querySelector('.append-column');\n\nbutton.forEach((el) => {\n  el.addEventListener('click', (e) => {\n    const clickedButt = e.target.className;\n\n    switch (clickedButt) {\n      case 'append-row button': {\n        if (tBody.children.length >= 9) {\n          e.target.setAttribute('disabled', true);\n        }\n\n        if (removeRow) {\n          removeRow.disabled = false;\n        }\n\n        const clonedRow = tBody.firstChild.cloneNode(true);\n\n        tBody.append(clonedRow);\n        break;\n      }\n\n      case 'append-column button': {\n        if (tr[0].cells.length >= 9) {\n          appendColumn.setAttribute('disabled', true);\n        }\n\n        if (removeColumn) {\n          removeColumn.disabled = false;\n        }\n\n        const trUpdated = [...document.querySelectorAll('tr')];\n\n        trUpdated.forEach((element) => {\n          const td = document.createElement('td');\n\n          element.append(td);\n        });\n\n        break;\n      }\n\n      case 'remove-row button': {\n        if (tBody.children.length <= 3) {\n          removeRow.setAttribute('disabled', true);\n        }\n\n        if (appendRow) {\n          appendRow.disabled = false;\n        }\n\n        tBody.lastElementChild.remove();\n\n        break;\n      }\n\n      case 'remove-column button': {\n        if (tr[0].cells.length <= 3) {\n          removeColumn.setAttribute('disabled', true);\n        }\n\n        if (appendColumn) {\n          appendColumn.disabled = false;\n        }\n\n        const trUpdated = [...document.querySelectorAll('tr')];\n\n        trUpdated.forEach((element) => {\n          element.lastElementChild.remove();\n        });\n        break;\n      }\n    }\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tBody","document","querySelector","tr","querySelectorAll","button","appendRow","removeRow","removeColumn","appendColumn","forEach","el","addEventListener","e","target","className","children","setAttribute","disabled","clonedRow","firstChild","cloneNode","append","cells","trUpdated","element","td","createElement","lastElementChild","remove","trUpdated1"],"version":3,"file":"index.c5755fa5.js.map"}